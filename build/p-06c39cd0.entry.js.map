{"version":3,"names":["debounce","fn","delay","timeoutId","args","clearTimeout","setTimeout","customDropdownCss","CustomDropdownStyle0","CustomDropdown","this","filterDebounceMs","updateOption","options","getVisibleOptions","optEl","find","o","document","activeElement","selectedOption","changeDropdown","emit","value","getAllOptions","Array","from","el","querySelectorAll","getActiveOption","index","findIndex","option","focusNextOption","active","changeActiveState","setOptionFocus","getNextOrPrevOption","focusPrevOption","dir","length","li","shadowRoot","querySelector","focus","toggleDropdown","focusSelectedOption","handleInput","event","target","updateFilter","filter","handleChangeFilterDebounced","updateOptionVisibility","forEach","optionIsVisible","classList","add","remove","innerHTML","toLowerCase","includes","componentDidLoad","handleFocus","handleClick","customElements","get","handleDocumentClick","contains","handleKeyDown","key","preventDefault","_a","render","h","Host","htmlFor","label","class","type","placeholder","id","role","tabindex","toString","onInput","customOptionCss","CustomOptionStyle0","CustomOption","tabIndex"],"sources":["src/utils/debounce.ts","src/components/custom-dropdown/custom-dropdown.css?tag=custom-dropdown&encapsulation=shadow","src/components/custom-dropdown/custom-dropdown.tsx","src/components/custom-option/custom-option.css?tag=custom-option&encapsulation=shadow","src/components/custom-option/custom-option.tsx"],"sourcesContent":["export const debounce = (fn: Function, delay: number) => {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null;\n  return function (...args: any[]) {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => {\n      fn(...args);\n      timeoutId = null;\n    }, delay);\n  };\n}\n",":host {\n  font-family: Helvetica, sans-serif;\n  display: block;\n  max-width: 24rem;\n  color: var(--custom-dropdown-font-color, #767676);\n  font-weight: var(--custom-dropdown-font-weight, 700);\n}\n\nform {\n  position: relative;\n}\n\nlabel {\n  display: block;\n  margin-bottom: .5rem;\n}\n\n.search {\n  padding: .5rem 1rem;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 1rem;\n  background-color: var(--custom-dropdown-background-color, #F5F5F7);\n  color: var(--custom-dropdown-font-color, #767676);\n  font-weight: var(--custom-dropdown-font-weight, 700);\n  border: none;\n}\n\n.search-wrapper {\n  position: relative;\n  background: none;\n  border: none;\n  width: 100%;\n  background-color: var(--custom-dropdown-background-color, #F5F5F7);\n}\n\n.search-wrapper::before {\n  content: 'â–¼';\n  position: absolute;\n  right: .8rem;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.options {\n  position: absolute;\n  left: 0;\n  right: 0;\n  padding: 0;\n  margin: 0;\n  overflow-y: auto;\n  list-style-type: none;\n  transform: scale(1, 0);\n  transform-origin: top left;\n  transition: all 150ms ease-in;\n  pointer-events: none;\n  z-index: 2;\n}\n\n.options.active {\n  opacity: 1;\n  transform: scale(1, 1);\n  pointer-events: auto;\n}\n","import { Component, h, ComponentInterface, Host, Prop, State, Listen, Element, Event, EventEmitter } from '@stencil/core';\nimport { debounce } from '../../utils/debounce';\n\n/**\n * Custom dropdown component with built in optional search. Should be used along with custom-option components simiarly\n * to the native browser select element\n */\n@Component({\n  tag: 'custom-dropdown',\n  styleUrl: 'custom-dropdown.css',\n  shadow: true,\n})\nexport class CustomDropdown implements ComponentInterface {\n  /**\n   * Label above the dropdown\n   */\n  @Prop() label: string;\n\n  itemContainerRef!: HTMLUListElement;\n\n  /**\n   * Whether or not the dropdown is open\n   */\n  @State() active: boolean = false;\n\n  /**\n   * Value of the dropdown\n   */\n  @State() selectedOption: HTMLCustomOptionElement = null;\n\n  /**\n   * The value of the input\n   */\n  @State() filter: string = '';\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Fires whenever the value of the dropdown changes\n   */\n  @Event() changeDropdown: EventEmitter<string>;\n\n  /**\n   * Time in milliseconds to debounce the handleChangeFilterDebounced\n   */\n  private filterDebounceMs = 200;\n\n  componentDidLoad() {\n    this.updateOptionVisibility(this.filter);\n  }\n\n  @Listen('focus')\n  handleFocus() {\n    this.toggleDropdown();\n  }\n\n  @Listen('click')\n  handleClick(event: MouseEvent) {\n    if (event.target instanceof customElements.get('custom-option')) {\n      const option = event.target as HTMLCustomOptionElement;\n      this.selectedOption = option;\n      this.updateOption();\n      this.toggleDropdown();\n    }\n  }\n\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    if (!this.active) {\n      return;\n    }\n    if (!this.el.contains(event.target as Node)) {\n      this.changeActiveState(false);\n    }\n  }\n\n  private updateOption = () => {\n    const options = this.getVisibleOptions();\n    const optEl = options.find(o => document.activeElement === o);\n    this.selectedOption = optEl || this.selectedOption;\n    this.changeDropdown.emit(this.selectedOption ? this.selectedOption.value : '');\n  };\n\n  getAllOptions = () => Array.from(this.el.querySelectorAll('custom-option'));\n\n  getVisibleOptions = () => Array.from(this.el.querySelectorAll('custom-option.visible') as NodeListOf<HTMLCustomOptionElement>);\n\n  getActiveOption = () => {\n    const options = this.getVisibleOptions();\n    const index = options.findIndex(option => document.activeElement === option);\n    return {\n      index,\n      options,\n    };\n  };\n\n  focusNextOption = () => {\n    if (!this.active) this.changeActiveState(true);\n    this.setOptionFocus(this.getNextOrPrevOption('next'));\n  };\n\n  focusPrevOption = () => {\n    if (!this.active) this.changeActiveState(true);\n    this.setOptionFocus(this.getNextOrPrevOption('prev'));\n  };\n\n  getNextOrPrevOption = (dir: 'next' | 'prev') => {\n    const { index, options } = this.getActiveOption();\n    if (dir === 'next') return index === options.length - 1 ? options[0] : options[index + 1];\n    return index === 0 || index === -1 ? options[options.length - 1] : options[index - 1];\n  };\n\n  setOptionFocus = (option: HTMLCustomOptionElement) => {\n    const li = option?.shadowRoot.querySelector('li');\n    li?.focus();\n  };\n\n  private toggleDropdown = () => {\n    const active = !this.active;\n    this.changeActiveState(active);\n  };\n\n  private changeActiveState = (active: boolean) => {\n    if (!this.active) {\n      this.el.shadowRoot.querySelector('input').focus();\n    }\n    if (!active) {\n      this.el.focus();\n    }\n    this.active = active;\n  };\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        if (this.active) {\n          this.updateOption();\n        }\n        this.toggleDropdown();\n        if (this.selectedOption) {\n          this.focusSelectedOption();\n        }\n        break;\n      case 'Escape':\n        if (this.active) {\n          this.changeActiveState(false);\n          this.updateFilter(this.selectedOption?.innerHTML || this.filter);\n        }\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPrevOption();\n        break;\n    }\n  }\n\n  focusSelectedOption = () => {\n    if (this.selectedOption) {\n      this.setOptionFocus(this.selectedOption);\n    } else {\n      this.focusNextOption();\n    }\n  };\n\n  handleInput = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    this.updateFilter(value);\n  };\n\n  updateFilter = (value: string) => {\n    this.filter = value;\n    this.handleChangeFilterDebounced(this.filter);\n  };\n\n  handleChangeFilterDebounced = debounce((filter: string) => {\n    this.updateOptionVisibility(filter);\n  }, this.filterDebounceMs);\n\n  updateOptionVisibility = (filter: string) => {\n    const options = this.getAllOptions();\n    options.forEach(option => {\n      if (this.optionIsVisible(filter, option)) {\n        option.classList.add('visible');\n      } else {\n        option.classList.remove('visible');\n      }\n    });\n  };\n\n  optionIsVisible = (filter: string, option: HTMLCustomOptionElement) => filter === '' || option.innerHTML.toLowerCase().includes(filter.toLowerCase());\n\n  render() {\n    return (\n      <Host>\n        <form>\n          <label htmlFor={this.label}>{this.label}</label>\n          <div class=\"search-wrapper\">\n            <input\n              class=\"search\"\n              type=\"text\"\n              placeholder=\"Select\"\n              id={this.label}\n              role=\"combobox\"\n              aria-controls={`listbox-${this.label}`}\n              aria-haspopup={`listbox-${this.label}`}\n              tabindex=\"0\"\n              aria-expanded={this.active.toString()}\n              onInput={this.handleInput}\n              value={this.selectedOption?.innerHTML || this.filter}\n            />\n          </div>\n          <ul class={`options${this.active ? ' active' : ''}`} role=\"listbox\" id={`listbox-${this.label}`}>\n            <slot></slot>\n          </ul>\n        </form>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: none;\n}\n\n:host(.visible) {\n  /* outline: 1px solid red; */\n  display: block;\n}\n\nli {\n  padding: .5rem 1rem;\n  background-color: var(--custom-dropdown-background-color, #F5F5F7);\n\n  cursor: pointer;\n  transition: all 150ms ease-in;\n  position: relative;\n  font-family: Helvetica, sans-serif;\n\n  color: var(--custom-dropdown-font-color, #767676);\n}\n\nli:hover {\n  background-color: var(--custom-option-background-color-hover, #E5E5EA);\n}\n\nli:focus {\n  background-color: var(--custom-option-background-color-focus, #D1D1D6);\n}\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\n\n/**\n * Custom option element for use with the custom-dropdown element. Acts similarly to the browser's\n * built in option element. Only to be used inside of custom-dropdown\n */\n@Component({\n  tag: 'custom-option',\n  styleUrl: 'custom-option.css',\n  shadow: true\n})\nexport class CustomOption {\n  @Element() el: HTMLElement;\n\n  /**\n   * The value that will emitted when the custom-dropdown changes\n   */\n  @Prop() value: string;\n\n  render() {\n    return (\n      <Host>\n        <li role=\"option\" tabIndex={0}>\n          <slot></slot>\n        </li>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}